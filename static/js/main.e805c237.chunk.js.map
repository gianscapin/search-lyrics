{"version":3,"sources":["components/Form.js","components/Lyrics.js","components/Info.js","App.js","reportWebVitals.js","index.js"],"names":["Form","saveSearchLyric","useState","artist","song","search","saveSearch","error","saveError","refreshState","e","target","name","value","className","onSubmit","preventDefault","trim","type","placeholder","onChange","Lyrics","lyric","length","Info","band","Object","keys","strArtistThumb","strArtist","strGenre","strBiographyES","strFacebook","strTwitter","strLastFMChart","src","alt","href","rel","xmlns","width","height","fill","class","viewBox","d","App","searchLyric","saveLyric","saveBand","useEffect","a","url","url2","Promise","all","axios","get","info","result2","data","lyrics","artists","consultApiLyric","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e805c237.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nconst Form = ({saveSearchLyric}) => {\n\n    const [search,saveSearch] = useState({\n        artist:'',\n        song:''\n    });\n\n    const [error,saveError] = useState(false);\n\n    const {artist,song} = search;\n\n    const refreshState = e =>{\n        saveSearch({\n            ...search,\n            [e.target.name]:e.target.value\n        })\n    }\n\n    const searchInfo = e =>{\n        e.preventDefault();\n\n        if(artist.trim()===''||song.trim()===''){\n            saveError(true);\n            return;\n        }\n        saveError(false);\n        saveSearchLyric(search);\n    }\n\n    return ( \n        <div className=\"bg-info\">\n            {error ? <p className=\"alert alert-danger text-center p-2\">Todos los campos son obligatorios</p> : null}\n            <div className=\"container\">\n                <div className=\"row\">\n                    <form\n                        onSubmit={searchInfo}\n                        className=\"col card text-white bg-transparent mb-5 pt-5 pb-2\"\n                    >\n                        <fieldset>\n                            <legend className=\"text-center\">Buscador Letras Canciones</legend>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>Artista</label>\n                                        <input \n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"artist\"\n                                            placeholder=\"Nombre del artista\"\n                                            onChange={refreshState}\n                                            value={search.artist}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>Canción</label>\n                                            <input \n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                name=\"song\"\n                                                placeholder=\"Nombre de la canción\"\n                                                onChange={refreshState}\n                                                value={search.song}\n                                            />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <button \n                                type=\"submit\"\n                                className=\"btn btn-primary float-right\"\n                            >Buscar</button>\n                        </fieldset>\n                    </form>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default Form;","import React, {Fragment} from 'react';\n\nconst Lyrics = ({lyric}) => {\n    if(lyric.length===0) return null;\n    return(\n        <Fragment>\n            <h2>Letra de la canción</h2>\n                <p className=\"letra\">{lyric}</p>\n        </Fragment>\n    );\n}\n\n \nexport default Lyrics;","import React from 'react';\n\nconst Info = ({band, song}) => {\n\n    if (Object.keys(band).length === 0) return null;\n\n    const { strArtistThumb, strArtist, strGenre, strBiographyES, strFacebook, strTwitter, strLastFMChart} = band;\n    return ( \n        <div className=\"card border-light\">\n            <div className=\"card-header bg-primary text-light font-weight-bold\">\n                Información\n            </div>\n            <div className=\"card-body\">\n                <img src={strArtistThumb} alt=\"logo artist\" />\n                <p className=\"card-text\">Género: {strGenre}</p>\n                <h2 className=\"card-text\">Biografía: </h2>\n                <p className=\"card-text\">{strBiographyES}</p>\n                <p className=\"card-text\">\n                    <a href={`https://${strFacebook}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-facebook\"></i>\n                    </a>\n                    <a href={`https://${strTwitter}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-twitter\"></i>\n                    </a>\n                    <a href={`${strLastFMChart}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-lastfm\"></i>\n                    </a>\n                </p>\n                <h2 className=\"card-text\">Escuchar</h2>\n                <p className=\"card-text text-center\">\n                    <a href={`https://www.last.fm/music/${strArtist}/_/${song}`}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"currentColor\" class=\"bi bi-play-circle\" viewBox=\"0 0 16 16\">\n                            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                            <path d=\"M6.271 5.055a.5.5 0 0 1 .52.038l3.5 2.5a.5.5 0 0 1 0 .814l-3.5 2.5A.5.5 0 0 1 6 10.5v-5a.5.5 0 0 1 .271-.445z\"/>\n                        </svg>\n                    </a>\n                </p>\n            </div>\n        </div>\n     );\n}\n \nexport default Info;","import {Fragment, useState, useEffect} from 'react';\nimport Form from './components/Form';\nimport Lyrics from './components/Lyrics';\nimport Info from './components/Info';\nimport axios from 'axios';\n\nfunction App() {\n\n  // definir el state\n  const[searchLyric, saveSearchLyric] = useState({});\n\n  const[lyric, saveLyric] = useState('');\n\n  const[band, saveBand] = useState({});\n\n  // consultar a la API\n\n  useEffect(() =>{\n    if(Object.keys(searchLyric).length === 0) return;\n\n\n    const consultApiLyric = async () =>{\n      const url = `https://api.lyrics.ovh/v1/${searchLyric.artist}/${searchLyric.song}`;\n      const url2 = `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${searchLyric.artist}`;\n\n      const [lyric,info] = await Promise.all([\n        axios.get(url),\n        axios.get(url2)\n      ]);\n\n      const result = lyric;\n      const result2 = info;\n      saveLyric(result.data.lyrics);\n      saveBand(result2.data.artists[0]);\n    }\n    consultApiLyric();\n  },[searchLyric, band]);\n\n\n  return (\n    <Fragment>\n      <Form \n        saveSearchLyric = {saveSearchLyric}\n      />\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <Info \n              band = {band}\n              song = {searchLyric.song}\n            />\n          </div>\n          <div className=\"col-md-6\">\n          <Lyrics \n              lyric = {lyric}\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}